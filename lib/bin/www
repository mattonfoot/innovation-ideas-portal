#!/usr/bin/env node

var app =   require('../app');
var debug = require('debug')('express-mulitchain-node:server');
var http =  require('http');

const normalizePort = (val) => {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    return val;
  }

  return port >= 0 ? port : false;
};

const onError = (port) => (error) => {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
    break;

    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
    break;

    default:
      throw error;
  }
};

const onListening = (server) => () => {
  var addr = server.address();

  var bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;

  debug('Debugger listening on ' + bind);
};

// environment variables
var port = normalizePort(process.env.NETWORK_PORT || '3000');
app.set('port', port);

app.locals.params = process.env;

// create server for application
var server = http.createServer(app);

// start server
server.listen(port);
server.on('error',       onError(port));
server.on('listening',   onListening(server));
